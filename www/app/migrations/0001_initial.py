# Generated by Django 2.0.7 on 2018-07-29 13:25

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(blank=True, max_length=1000, null=True, verbose_name='Текст')),
                ('background', versatileimagefield.fields.VersatileImageField(blank=True, max_length=255, null=True, upload_to='block/', verbose_name='Фон')),
                ('button_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('button_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текст кнопки')),
                ('animate', models.CharField(blank=True, choices=[('Bounce', (('bounceIn', 'bounceIn'), ('bounceInDown', 'bounceInDown'), ('bounceInLeft', 'bounceInLeft'), ('bounceInRight', 'bounceInRight'), ('bounceInUp', 'bounceInUp'))), ('Fade', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Flip', (('flipInX', 'flipInX'), ('flipInY', 'flipInY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'),)), ('Rotate', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Slide', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Zoom', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('jackInTheBox', 'jackInTheBox'), ('rollIn', 'rollIn')))], default='None', max_length=255, null=True, verbose_name='Анимация')),
            ],
            options={
                'verbose_name': 'Блок',
                'verbose_name_plural': 'Блоки',
                'db_table': 'block',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CaruselItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(max_length=255, upload_to='caruselitem/', verbose_name='Изображение')),
                ('text', ckeditor.fields.RichTextField(blank=True, max_length=1000, null=True, verbose_name='Текст')),
                ('button_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текст кнопки')),
                ('button_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Url кнопки')),
                ('animate', models.CharField(blank=True, choices=[('Bounce', (('bounceIn', 'bounceIn'), ('bounceInDown', 'bounceInDown'), ('bounceInLeft', 'bounceInLeft'), ('bounceInRight', 'bounceInRight'), ('bounceInUp', 'bounceInUp'))), ('Fade', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Flip', (('flipInX', 'flipInX'), ('flipInY', 'flipInY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'),)), ('Rotate', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Slide', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Zoom', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('jackInTheBox', 'jackInTheBox'), ('rollIn', 'rollIn')))], default='None', max_length=255, null=True, verbose_name='Анимация')),
            ],
            options={
                'verbose_name': 'Элемент карусели',
                'verbose_name_plural': 'Элементы карусели',
                'db_table': 'carusel_item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('phone', models.CharField(max_length=255, verbose_name='Телефон')),
                ('text', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Текст')),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to='feedback/', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'db_table': 'feedback',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FilterCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория фильтра',
                'verbose_name_plural': 'Категории фильтра',
                'db_table': 'filter_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FilterItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(max_length=255, upload_to='filteritem/', verbose_name='Изображение')),
                ('text', models.TextField(max_length=255, verbose_name='Текст')),
                ('button_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текст кнопки')),
                ('button_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Url кнопки')),
                ('pos', models.IntegerField(blank=True, null=True, verbose_name='Позиция')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='Ширина')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='Высота')),
                ('animate', models.CharField(blank=True, choices=[('Bounce', (('bounceIn', 'bounceIn'), ('bounceInDown', 'bounceInDown'), ('bounceInLeft', 'bounceInLeft'), ('bounceInRight', 'bounceInRight'), ('bounceInUp', 'bounceInUp'))), ('Fade', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Flip', (('flipInX', 'flipInX'), ('flipInY', 'flipInY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'),)), ('Rotate', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Slide', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Zoom', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('jackInTheBox', 'jackInTheBox'), ('rollIn', 'rollIn')))], default='None', max_length=255, null=True, verbose_name='Анимация')),
                ('categories', models.ManyToManyField(blank=True, related_name='filter_category', to='app.FilterCategory', verbose_name='Категории')),
            ],
            options={
                'verbose_name': 'Элемент фильтра',
                'verbose_name_plural': 'Элементы фильтра',
                'db_table': 'filter_item',
                'ordering': ['pos'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Домашняя страница',
                'verbose_name_plural': 'Домашние страницы',
                'db_table': 'home_page',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MapItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(verbose_name='Широта')),
                ('longitude', models.FloatField(verbose_name='Долгота')),
                ('hint', models.CharField(blank=True, max_length=255, null=True, verbose_name='Хинт')),
                ('baloon', models.CharField(blank=True, max_length=255, null=True, verbose_name='Балун')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('object', models.CharField(blank=True, max_length=255, null=True, verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Элемент карты',
                'verbose_name_plural': 'Элементы карты',
                'db_table': 'map_item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='ЧПУ')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('body', models.TextField(blank=True, null=True, verbose_name='Содержимое')),
                ('view', models.CharField(blank=True, choices=[('without_layout.html', 'without_layout.html'), ('with_layout.html', 'with_layout.html')], max_length=255, null=True, verbose_name='Файл отображения')),
                ('status', models.BooleanField(verbose_name='Отображать')),
                ('layout', models.BooleanField(verbose_name='Использовать шаблон')),
                ('posmenu', models.SmallIntegerField(blank=True, null=True, verbose_name='Позиция в меню')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
            ],
            options={
                'verbose_name': 'Страница',
                'verbose_name_plural': 'Страницы',
                'db_table': 'page',
                'ordering': ['posmenu'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='ЧПУ')),
                ('section_type', models.CharField(choices=[('block', 'Блок'), ('carusel', 'Карусель'), ('table', 'Таблица'), ('filter', 'Фильтр'), ('map', 'Карта')], max_length=255, verbose_name='Тип секции')),
                ('display_title', models.BooleanField(verbose_name='Показывать название')),
                ('pos', models.IntegerField(blank=True, null=True, verbose_name='Позиция')),
                ('title_animate', models.CharField(blank=True, choices=[('Bounce', (('bounceIn', 'bounceIn'), ('bounceInDown', 'bounceInDown'), ('bounceInLeft', 'bounceInLeft'), ('bounceInRight', 'bounceInRight'), ('bounceInUp', 'bounceInUp'))), ('Fade', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Flip', (('flipInX', 'flipInX'), ('flipInY', 'flipInY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'),)), ('Rotate', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Slide', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Zoom', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('jackInTheBox', 'jackInTheBox'), ('rollIn', 'rollIn')))], default='None', max_length=255, null=True, verbose_name='Анимация заголовка')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='app.Page', verbose_name='Страница')),
            ],
            options={
                'verbose_name': 'Секция',
                'verbose_name_plural': 'Секции',
                'db_table': 'section',
                'ordering': ['pos'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SectionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(max_length=255, upload_to='sectionimage/', verbose_name='Изображение')),
                ('position', models.BooleanField(verbose_name='Позиция')),
                ('animate', models.CharField(choices=[('Bounce', (('bounceIn', 'bounceIn'), ('bounceInDown', 'bounceInDown'), ('bounceInLeft', 'bounceInLeft'), ('bounceInRight', 'bounceInRight'), ('bounceInUp', 'bounceInUp'))), ('Fade', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Flip', (('flipInX', 'flipInX'), ('flipInY', 'flipInY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'),)), ('Rotate', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Slide', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Zoom', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('jackInTheBox', 'jackInTheBox'), ('rollIn', 'rollIn')))], max_length=255, null=True, verbose_name='Анимация')),
                ('section', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='app.Section', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Картинка',
                'verbose_name_plural': 'Картинки',
                'db_table': 'section_image',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('pos', models.IntegerField(blank=True, null=True, verbose_name='Позиция')),
                ('animate', models.CharField(blank=True, choices=[('Bounce', (('bounceIn', 'bounceIn'), ('bounceInDown', 'bounceInDown'), ('bounceInLeft', 'bounceInLeft'), ('bounceInRight', 'bounceInRight'), ('bounceInUp', 'bounceInUp'))), ('Fade', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Flip', (('flipInX', 'flipInX'), ('flipInY', 'flipInY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'),)), ('Rotate', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Slide', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Zoom', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('jackInTheBox', 'jackInTheBox'), ('rollIn', 'rollIn')))], default='None', max_length=255, null=True, verbose_name='Анимация')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table', to='app.Section', verbose_name='секция')),
            ],
            options={
                'verbose_name': 'Таблица',
                'verbose_name_plural': 'Таблицы',
                'db_table': 'table',
                'ordering': ['pos'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.IntegerField(verbose_name='Строка')),
                ('col', models.IntegerField(verbose_name='Столбец')),
                ('value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Значение')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_items', to='app.Table', verbose_name='Таблица')),
            ],
            options={
                'verbose_name': 'Элемент таблицы',
                'verbose_name_plural': 'Элементы таблицы',
                'db_table': 'table_item',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='mapitem',
            name='section',
            field=models.ManyToManyField(related_name='map', to='app.Section', verbose_name='Секция'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='page',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='homePage', to='app.Page'),
        ),
        migrations.AddField(
            model_name='filteritem',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filter', to='app.Section', verbose_name='Секция'),
        ),
        migrations.AddField(
            model_name='caruselitem',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carusel', to='app.Section', verbose_name='Секция'),
        ),
        migrations.AddField(
            model_name='block',
            name='section',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='block', to='app.Section', verbose_name='Секция'),
        ),
        migrations.AlterUniqueTogether(
            name='tableitem',
            unique_together={('row', 'col', 'table')},
        ),
    ]
